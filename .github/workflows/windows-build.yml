name: Windows Build

on:
  push:
    branches:
      - try_github_actions
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      BLENDER_VERSION: "4.5.0-alpha"
      BUILD_TYPE: "Release"

    steps:
      - name: Install Git LFS (Windows)
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "https://github.com/git-lfs/git-lfs/releases/download/v3.5.1/git-lfs-windows-amd64-v3.5.1.zip" -OutFile git-lfs.zip
          Expand-Archive git-lfs.zip -DestinationPath git-lfs
          cd git-lfs
          ./install.ps1
          git lfs install --force

      - name: Checkout repo & submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
          lfs: true

      - name: Init & update submodules
        shell: bash
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive --force
          git submodule foreach --recursive 'git lfs install && git lfs pull'

      - name: Fetch precompiled libraries
        shell: powershell
        run: |
          python build_files/utils/make_update.py --architecture="amd64"

      - name: Configure CMake
        shell: bash
        run: |
          mkdir build_windows
          cd build_windows
          cmake .. \
            -C "../build_files/buildbot/config/blender_windows.cmake" \
            -G "Visual Studio 17 2022" \
            -A x64 \
            -DCMAKE_INSTALL_PREFIX=../install \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -D WITH_INSTALL_PORTABLE=ON

      - name: Build and Install
        shell: bash
        run: |
          cd build_windows
          cmake --build . --config ${{ env.BUILD_TYPE }} --target install --parallel

      - name: Verify installation
        shell: pwsh
        run: |
          if (-not (Test-Path "install/blender.exe")) {
              Write-Error "Blender executable not found!"
              exit 1
          }
          $blendContent = Get-Content "install/4.5/scripts/startup/bl_operators/startup.blend" -Raw
          if ($blendContent -match "oid sha256") {
              Write-Error "Git LFS files not resolved!"
              exit 1
          }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: blender-windows-${{ env.BLENDER_VERSION }}
          path: install
