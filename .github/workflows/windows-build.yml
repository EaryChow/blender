name: Windows Build

on:
  push:
    branches:
      - try_github_actions
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      BLENDER_VERSION: "4.5.0-alpha"
      BUILD_TYPE: "Release"

    steps:
      - name: Checkout repo & submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Fetch LFS for main repo
        run: git lfs pull

      - name: Fetch LFS for submodules
        run: git submodule foreach --recursive git lfs pull

      - name: Check LFS files
        shell: pwsh
        run: |
          $blendFile = "release/datafiles/startup.blend"
          if (Test-Path $blendFile) {
              $size = (Get-Item $blendFile).Length
              if ($size -lt 10240) {
                  Write-Error "$blendFile is too small ($size bytes), likely a Git LFS pointer! Please ensure all LFS objects are pushed to the server by running 'git lfs push --all origin' locally before pushing your branch."
                  exit 1
              }
          } else {
              Write-Error "$blendFile not found! Please check the repository structure."
              exit 1
          }

      - name: Init & update submodules
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive

      - name: Fetch precompiled libraries
        shell: powershell
        run: |
          python build_files/utils/make_update.py --architecture="amd64"

      - name: Configure CMake
        shell: bash
        run: |
          mkdir build_windows
          cd build_windows
          cmake .. \
            -C "../build_files/buildbot/config/blender_windows.cmake" \
            -G "Visual Studio 17 2022" \
            -A x64 \
            -DCMAKE_INSTALL_PREFIX=../install \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -D WITH_INSTALL_PORTABLE=ON

      - name: Build and Install
        shell: bash
        run: |
          cd build_windows
          cmake --build . --config ${{ env.BUILD_TYPE }} --target install --parallel

      - name: Verify installation
        shell: pwsh
        run: |
          if (-not (Test-Path "install/blender.exe")) {
              Write-Error "Blender executable not found!"
              exit 1
          }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: blender-windows-${{ env.BLENDER_VERSION }}
          path: install
